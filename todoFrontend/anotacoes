import AsyncStorage from '@react-native-async-storage/async-storage';
import React, { useEffect } from 'react';

const AuthContext  = React.createContext();


const AuthProvider = (props)=>{
    const [name,setName] = React.useState();
    const [logged,setLogged] =React.useState(false)
    const [token,setToken]= React.useState('')
    useEffect(()=>{
        getDados()
    },[])
    
    async function getDados(){
        const nomeLocal = await AsyncStorage.getItem('nome')
        const logado = await AsyncStorage.getItem('logged')
        const tk = await AsyncStorage.getItem('token')

        if(nomeLocal == null || nomeLocal == undefined){
            setName('')
        }else{
            setName(nomeLocal)
        }
        
        if(logado == null || logado == undefined){
            setLogged(false)
        }else{
            setLogged(JSON.parse(logado))
        }

        if(token == null || token == undefined){
            setToken("")
        }else{
            setToken(tk)
        }
    }
    return(
        <AuthContext.Provider
         value={{
            name,
            setName,
            logged,
            setLogged,
            token,
            setToken
         }}
        >
            {props.children}
        </AuthContext.Provider>

    );
}

export {
    AuthContext,
    AuthProvider
}

===========================================================================================================================================================



const Teste1 = () =>{
    const navigation = useNavigation()
    
    const {setLogged} = useContext(AuthContext)

    async function deslogar(){
       await AsyncStorage.removeItem('nome')
       await AsyncStorage.removeItem('logged')
       await AsyncStorage.removeItem('token')
       setLogged(false);
    }

    return(
        <View>
            <Text>
                Sou a tela 
            </Text>
            <Button
                onPress={()=>{
                    deslogar()
                    //navigation.navigate('teste2')

                }}
                title="Ir para a tela2"
            />
        </View>
    )
}


export default Teste1;
